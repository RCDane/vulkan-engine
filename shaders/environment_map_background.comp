#version 460
#extension GL_GOOGLE_include_directive : require
#extension  GL_EXT_shader_explicit_arithmetic_types_int64 : require

layout (local_size_x = 16, local_size_y = 16) in;

layout(rgba16f,set = 0, binding = 0) uniform image2D image;
layout(set = 0, binding = 1) uniform samplerCube cubeMap;

#include "common/host_device.h"

//push constants block
layout( push_constant ) uniform _GlobalUniforms { GlobalUniforms uni; };

void main() 
{
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);

	ivec2 size = imageSize(image);
    const vec2 pixelCenter = vec2(gl_GlobalInvocationID.xy) + vec2(0.5);
    const vec2 inUV        = pixelCenter / vec2(uni.viewPort.xy);
    vec2       d           = inUV * 2.0 - 1.0;

    vec4 origin    = uni.viewInverse * vec4(0, 0, 0, 1);
    vec4 target    = uni.projInverse * vec4(d.x, d.y, 1, 1);
    vec4 direction = uni.viewInverse * vec4(normalize(target.xyz), 0);


    if(texelCoord.x < size.x && texelCoord.y < size.y)
    {
    
        imageStore(image, texelCoord, texture(cubeMap, direction.xyz));
    }
}